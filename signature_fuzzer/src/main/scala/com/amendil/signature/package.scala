package com.amendil

package object signature:
  val unknownFunctions: Seq[String] = Seq(
    "extractAllGroups"
  )
  val unknownFunctions3: Seq[String] = Seq(
    "extractAllGroups",
    "extractAllGroupsHorizontal",
    "extractAllGroupsVertical",
    "extractGroups",
    "finalizeAggregation",
    "firstSignificantSubdomainCustom",
    "firstSignificantSubdomainCustomRFC",
    "flameGraph",
    "flattenTuple",
    "formatQuery",
    "formatQuerySingleLine",
    "formatRow",
    "formatRowNoNewline",
    "fuzzBits",
    "geoDistance",
    "geoToH3",
    "geoToS2",
    "geohashEncode",
    "geohashesInBox",
    "getMacro",
    "getServerPort",
    "getSetting",
    "getSubcolumn",
    "greatCircleAngle",
    "greatCircleDistance",
    "hasColumnInTable",
    "initializeAggregation",
    "isDecimalOverflow",
    "isIPAddressInRange",
    "isNotDistinctFrom",
    "joinGet",
    "joinGetOrNull",
    "kolmogorovSmirnovTest",
    "lemmatize",
    "lowCardinalityIndices",
    "lowCardinalityKeys",
    "makeDateTime",
    "makeDateTime64",
    "mannWhitneyUTest",
    "mapAll",
    "mapApply",
    "mapExists",
    "mapFilter",
    "meanZTest",
    "medianDD",
    "minSampleSizeContinous",
    "minSampleSizeContinuous",
    "minSampleSizeConversion",
    "multiplyDecimal",
    "nested",
    "nonNegativeDerivative",
    "ntile",
    "parseDateTime32BestEffort",
    "parseDateTime64BestEffort",
    "parseDateTime64BestEffortUS",
    "parseDateTimeBestEffort",
    "parseDateTimeBestEffortUS",
    "parseTimeDelta",
    "pointInEllipses",
    "proportionsZTest",
    "quantileDD",
    "quantilesDD",
    "quantilesExactExclusive",
    "quantilesGK",
    "rankCorr",
    "readWKTMultiPolygon",
    "readWKTPoint",
    "readWKTPolygon",
    "readWKTRing",
    "regexpExtract",
    "regionHierarchy",
    "regionIn",
    "regionToArea",
    "regionToCity",
    "regionToContinent",
    "regionToCountry",
    "regionToDistrict",
    "regionToName",
    "regionToPopulation",
    "regionToTopContinent",
    "reinterpret",
    "runningAccumulate",
    "seriesDecomposeSTL",
    "seriesOutliersDetectTukey",
    "sparkBar",
    "sparkbar",
    "splitByChar",
    "stem",
    "structureToCapnProtoSchema",
    "structureToProtobufSchema",
    "subBitmap",
    "substringIndex",
    "substringIndexUTF8",
    "sumMapFiltered",
    "sumMapFilteredWithOverflow",
    "synonyms",
    "timeSlots",
    "toModifiedJulianDay",
    "transactionLatestSnapshot",
    "transactionOldestSnapshot",
    "uniqThetaIntersect",
    "uniqThetaNot",
    "uniqThetaUnion",
    "variantElement",
    "variantType",
    "widthBucket",
    "width_bucket"
  )
  val unknownFunctions2: Seq[String] = Seq(
    "REGEXP_EXTRACT",
    "SUBSTRING_INDEX",
    "addressToLine",
    "addressToLineWithInlines",
    "addressToSymbol",
    "aggThrow",
    "analysisOfVariance",
    "anova",
    "appendTrailingCharIfAbsent",
    "arrayFold",
    "arrayReduce",
    "arrayReduceInRanges",
    "bitmapAnd",
    "bitmapAndCardinality",
    "bitmapAndnot",
    "bitmapAndnotCardinality",
    "bitmapCardinality",
    "bitmapContains",
    "bitmapHasAll",
    "bitmapHasAny",
    "bitmapMax",
    "bitmapMin",
    "bitmapOr",
    "bitmapOrCardinality",
    "bitmapSubsetInRange",
    "bitmapSubsetLimit",
    "bitmapToArray",
    "bitmapTransform",
    "bitmapXor",
    "bitmapXorCardinality",
    "convertCharset",
    "currentSchemas",
    "current_schemas",
    "cutToFirstSignificantSubdomainCustom",
    "cutToFirstSignificantSubdomainCustomRFC",
    "cutToFirstSignificantSubdomainCustomWithWWW",
    "cutToFirstSignificantSubdomainCustomWithWWWRFC",
    "dense_rank",
    "dictGet",
    "dictGetAll",
    "dictGetChildren",
    "dictGetDate",
    "dictGetDateOrDefault",
    "dictGetDateTime",
    "dictGetDateTimeOrDefault",
    "dictGetDescendants",
    "dictGetFloat32",
    "dictGetFloat32OrDefault",
    "dictGetFloat64",
    "dictGetFloat64OrDefault",
    "dictGetHierarchy",
    "dictGetIPv4",
    "dictGetIPv4OrDefault",
    "dictGetIPv6",
    "dictGetIPv6OrDefault",
    "dictGetInt16",
    "dictGetInt16OrDefault",
    "dictGetInt32",
    "dictGetInt32OrDefault",
    "dictGetInt64",
    "dictGetInt64OrDefault",
    "dictGetInt8",
    "dictGetInt8OrDefault",
    "dictGetOrDefault",
    "dictGetOrNull",
    "dictGetString",
    "dictGetStringOrDefault",
    "dictGetUInt16",
    "dictGetUInt16OrDefault",
    "dictGetUInt32",
    "dictGetUInt32OrDefault",
    "dictGetUInt64",
    "dictGetUInt64OrDefault",
    "dictGetUInt8",
    "dictGetUInt8OrDefault",
    "dictGetUUID",
    "dictGetUUIDOrDefault",
    "dictHas",
    "dictIsIn",
    "extractAllGroups",
    "extractAllGroupsHorizontal",
    "extractAllGroupsVertical",
    "extractGroups",
    "finalizeAggregation",
    "firstSignificantSubdomainCustom",
    "firstSignificantSubdomainCustomRFC",
    "flameGraph",
    "flattenTuple",
    "formatQuery",
    "formatQuerySingleLine",
    "formatRow",
    "formatRowNoNewline",
    "fuzzBits",
    "geoDistance",
    "geoToH3",
    "geoToS2",
    "geohashEncode",
    "geohashesInBox",
    "getMacro",
    "getServerPort",
    "getSetting",
    "getSubcolumn",
    "greatCircleAngle",
    "greatCircleDistance",
    "groupBitmapAnd",
    "groupBitmapOr",
    "groupBitmapXor",
    "h3CellAreaM2",
    "h3CellAreaRads2",
    "h3Distance",
    "h3ExactEdgeLengthKm",
    "h3ExactEdgeLengthM",
    "h3ExactEdgeLengthRads",
    "h3GetBaseCell",
    "h3GetDestinationIndexFromUnidirectionalEdge",
    "h3GetFaces",
    "h3GetIndexesFromUnidirectionalEdge",
    "h3GetOriginIndexFromUnidirectionalEdge",
    "h3GetResolution",
    "h3GetUnidirectionalEdge",
    "h3GetUnidirectionalEdgeBoundary",
    "h3GetUnidirectionalEdgesFromHexagon",
    "h3HexRing",
    "h3IndexesAreNeighbors",
    "h3IsPentagon",
    "h3IsResClassIII",
    "h3IsValid",
    "h3Line",
    "h3PointDistKm",
    "h3PointDistM",
    "h3PointDistRads",
    "h3ToCenterChild",
    "h3ToChildren",
    "h3ToGeo",
    "h3ToGeoBoundary",
    "h3ToParent",
    "h3ToString",
    "h3UnidirectionalEdgeIsValid",
    "h3kRing",
    "hasColumnInTable",
    "initializeAggregation",
    "isDecimalOverflow",
    "isIPAddressInRange",
    "isNotDistinctFrom",
    "joinGet",
    "joinGetOrNull",
    "kolmogorovSmirnovTest",
    "lemmatize",
    "lowCardinalityIndices",
    "lowCardinalityKeys",
    "makeDateTime",
    "makeDateTime64",
    "mannWhitneyUTest",
    "mapAll",
    "mapApply",
    "mapExists",
    "mapFilter",
    "meanZTest",
    "medianDD",
    "minSampleSizeContinous",
    "minSampleSizeContinuous",
    "minSampleSizeConversion",
    "multiplyDecimal",
    "nested",
    "nonNegativeDerivative",
    "ntile",
    "parseDateTime32BestEffort",
    "parseDateTime64BestEffort",
    "parseDateTime64BestEffortUS",
    "parseDateTimeBestEffort",
    "parseDateTimeBestEffortUS",
    "parseTimeDelta",
    "pointInEllipses",
    "proportionsZTest",
    "quantileDD",
    "quantilesDD",
    "quantilesExactExclusive",
    "quantilesGK",
    "rankCorr",
    "readWKTMultiPolygon",
    "readWKTPoint",
    "readWKTPolygon",
    "readWKTRing",
    "regexpExtract",
    "regionHierarchy",
    "regionIn",
    "regionToArea",
    "regionToCity",
    "regionToContinent",
    "regionToCountry",
    "regionToDistrict",
    "regionToName",
    "regionToPopulation",
    "regionToTopContinent",
    "reinterpret",
    "runningAccumulate",
    "s2CapContains",
    "s2CapUnion",
    "s2CellsIntersect",
    "s2GetNeighbors",
    "s2RectAdd",
    "s2RectContains",
    "s2RectIntersection",
    "s2RectUnion",
    "s2ToGeo",
    "seriesDecomposeSTL",
    "seriesOutliersDetectTukey",
    "snowflakeToDateTime",
    "snowflakeToDateTime64",
    "sparkBar",
    "sparkbar",
    "splitByChar",
    "stem",
    "structureToCapnProtoSchema",
    "structureToProtobufSchema",
    "subBitmap",
    "substringIndex",
    "substringIndexUTF8",
    "sumMapFiltered",
    "sumMapFilteredWithOverflow",
    "synonyms",
    "timeSlots",
    "toModifiedJulianDay",
    "transactionLatestSnapshot",
    "transactionOldestSnapshot",
    "uniqThetaIntersect",
    "uniqThetaNot",
    "uniqThetaUnion",
    "variantElement",
    "variantType",
    "widthBucket",
    "width_bucket"
  )
